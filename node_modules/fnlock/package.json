{
  "author": {
    "name": "David Oliveira",
    "email": "d.oliveira@prozone.org"
  },
  "name": "fnlock",
  "description": "Locking for function calls and queuing on lock",
  "version": "0.0.4",
  "repository": {
    "type": "git",
    "url": "https://github.com/davidfoliveira/node-fnlock/"
  },
  "main": "./fnlock",
  "bin": {},
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "license": "Copyleft",
  "engines": {
    "node": ">=0.10.5"
  },
  "keywords": [
    "function",
    "lock",
    "locks"
  ],
  "readme": "# fnlock: Locking for function calls and queuing on lock\n\n`fnlock` is a module that allows locking on asyncronous functions and queuing of function calls, to be called on release.\n\n# Installing\n\n\tnpm install fnlock\n\n# Using\n\nSimple lock with function call queuing:\n\n\tvar fnlock = require('fnlock');\n\tfunction run(arg){\n\t   fnlock.lock(function(release){\n              console.log(\"Enter \"+arg);\n              setTimeout(release,1000);\n           });\n\t}\n\trun(1);\n\trun(2);\n\trun(3);\n\nIt's supposed that the script takes 3 seconds to run.\n\n\nSetting lock state on a function\n\n\tvar fnlock = require('fnlock');\n\tfunction run(arg) {\n\t   fnlock.lock('run',function(release){\n\t      console.log(\"Enter \"+arg);\n\t      release();\n\t   });\n\t}\n\n\tfnlock.lock('run');\n\trun('YEY');\n\tsetTimeout(function(){ fnlock.unlock('run'); },1000);\n\nIt's supposed that the script takes 1 second to run.\n",
  "readmeFilename": "README.md",
  "_id": "fnlock@0.0.4",
  "_from": "fnlock@"
}
